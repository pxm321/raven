<?xml version="1.0" ?>
<Simulation>
  <TestInfo>
    <name>framework/CodeInterfaceTests/PrescientInterface</name>
    <author>@cogljj</author>
    <created>2020-09-02</created>
    <revisions>
    </revisions>
    <classesTested>CodeInterfaces.PrescientCodeInterface</classesTested>
    <description>
      Test the Prescient Code Interface.
    </description>
  </TestInfo>

  <RunInfo>
    <WorkingDir>PrescientSurrogateTest</WorkingDir>
    <Sequence>load, train, resample</Sequence>
    <batchSize>2</batchSize>
  </RunInfo>

  <Files>
    <Input name="simulate" type="PrescientInput">simulate_with_network_deterministic_day.txt</Input>
    <Input name="structure" type="PrescientInput" subDirectory="deterministic_with_network_scenarios_day/pyspdir_twostage/2020-07-10/">ScenarioStructure.dat</Input>
    <Input name="scenario_1" type="PrescientInput" subDirectory="deterministic_with_network_scenarios_day/pyspdir_twostage/2020-07-10/">Scenario_1.dat</Input>
    <Input name="actuals" type="PrescientInput" subDirectory="deterministic_with_network_scenarios_day/pyspdir_twostage/2020-07-10/">Scenario_actuals.dat</Input>
    <Input name="forcasts" type="PrescientInput" subDirectory="deterministic_with_network_scenarios_day/pyspdir_twostage/2020-07-10/">Scenario_forecasts.dat</Input>
    <Input name="scenarios" type="PrescientInput" subDirectory="deterministic_with_network_scenarios_day/pyspdir_twostage/2020-07-10/">scenarios.csv</Input>
    <Input name="out_prescient">out_prescient.csv</Input>
  </Files>

  <Models>
    <Code name="TestPrescient" subType="Prescient">
      <executable>
      </executable>
    </Code>
    <ROM name="trainedROM" subType="SciKitLearn">
      <Features>solar, demand</Features>
      <Target>Price, Clay_LMP, Clay_LMP_DA</Target>
      <pivotParameter>Date_Hour</pivotParameter>
      <activation>logistic</activation>
      <hidden_layer_sizes>100</hidden_layer_sizes>
      <SKLtype>neural_network|MLPRegressor</SKLtype>
    </ROM>
  </Models>

  <Distributions>
    <Uniform name="solar">
      <lowerBound>0.5</lowerBound>
      <upperBound>2.0</upperBound>
    </Uniform>
    <Uniform name="demand">
      <lowerBound>0.5</lowerBound>
      <upperBound>2.0</upperBound>
    </Uniform>
  </Distributions>

  <Samplers>
    <Grid name="grid2">
      <variable name="solar">
        <distribution>solar</distribution>
        <grid construction="equal" steps="7" type="CDF">0.0 1.0</grid>
      </variable>
      <variable name="demand">
        <distribution>demand</distribution>
        <grid construction="equal" steps="7" type="CDF">0.0 1.0</grid>
      </variable>
    </Grid>
  </Samplers>

  <Steps>
    <!-- <MultiRun name="runPrescient">
      <Input class="Files" type="PrescientInput">simulate</Input>
      <Input class="Files" type="PrescientInput">structure</Input>
      <Input class="Files" type="PrescientInput">scenario_1</Input>
      <Input class="Files" type="PrescientInput">actuals</Input>
      <Input class="Files" type="PrescientInput">forcasts</Input>
      <Input class="Files" type="PrescientInput">scenarios</Input>
      <Model class="Models" type="Code">TestPrescient</Model>
      <Sampler class="Samplers" type="Grid">grid</Sampler>
      <Output class="Databases" type="HDF5">DB_prescient</Output>
      <Output class="DataObjects" type="HistorySet">samples</Output>
      <Output class="OutStreams" type="Print">out_prescient</Output>
    </MultiRun> -->
    <IOStep name="load">
      <Input class="Files" type="">out_prescient</Input>
      <Output class="DataObjects" type="HistorySet">samples</Output>
    </IOStep>
    <RomTrainer name="train">
      <Input class="DataObjects" type="HistorySet">samples</Input>
      <Output class="Models" type="ROM">trainedROM</Output>
    </RomTrainer>
    <MultiRun name="resample">
      <Input class="DataObjects" type="PointSet">dataIn</Input>
      <Model class="Models" type="ROM">trainedROM</Model>
      <Sampler class="Samplers" type="Grid">grid2</Sampler>
      <Output class="DataObjects" type="PointSet">resampled</Output>
      <Output class="OutStreams" type="Print">out_resampled2</Output>
    </MultiRun>
  </Steps>

  <Databases>
    <HDF5 name="DB_prescient" readMode="overwrite"/>
  </Databases>

  <DataObjects>
    <HistorySet name="samples">
      <Input>solar, demand</Input>
      <!-- <Output>Demand, Renewables available,Renewables used,Renewables penetration rate,Average price,Fixed costs,Generation costs,Load shedding,Over generation,Reserve shortfall,Renewables curtailment,Number on/offs,Sum on/off ramps,Sum nominal ramps</Output> -->
      <Output>Date_Hour, TotalCosts, FixedCosts, VariableCosts, LoadShedding, OverGeneration, ReserveShortfall, RenewablesUsed, RenewablesCurtailment, Demand, Price, Clay_LMP, Clay_LMP_DA </Output>
      <options>
        <pivotParameter>Date_Hour</pivotParameter>
      </options>
    </HistorySet>
    <PointSet name="resampled">
      <Input>solar, demand</Input>
      <Output>Price, Clay_LMP, Clay_LMP_DA</Output>
    </PointSet>
    <HistorySet name="inputPlaceHolder">
      <Input>solar, demand</Input>
      <Output>Date_Hour, Price</Output>
      <options>
        <pivotParameter>Date_Hour</pivotParameter>
      </options>
    </HistorySet>
    <PointSet name="dataIn">
      <Input>solar, demand</Input>
      <Output>OutputPlaceHolder</Output>
    </PointSet>
  </DataObjects>

  <OutStreams>
    <Print name="out_prescient">
      <type>csv</type>
      <source>samples</source>
    </Print>
    <Print name="out_resampled2">
      <type>csv</type>
      <source>resampled</source>
    </Print>
  </OutStreams>

  <!-- scripts used to convert data files:
awk '/ 319_PV_1/ {print " "$1,$2,$3,"\$(solar*"$4")\$"} !/ 319_PV_1/ {print $0}'  Scenario_actuals.dat > Scenario_actuals.dat.new
mv Scenario_actuals.dat.new Scenario_actuals.dat
awk '/ 319_PV_1/ {print " "$1,$2,$3,"\$(solar*"$4")\$"} !/ 319_PV_1/ {print $0}'  Scenario_forecasts.dat > Scenario_forecasts.dat.new
mv Scenario_forecasts.dat.new Scenario_forecasts.dat
for F in Scenario_1.dat Scenario_actuals.dat Scenario_forecasts.dat; do
  awk '/^ Clay/ {print " "$1,$2,"\$(demand*"$3")\$"} !/^ Clay/ {print $0}' $F > ${F}.new
  mv ${F}.new $F
done
  -->
</Simulation>
